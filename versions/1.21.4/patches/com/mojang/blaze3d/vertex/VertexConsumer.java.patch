--- a/com/mojang/blaze3d/vertex/VertexConsumer.java
+++ b/com/mojang/blaze3d/vertex/VertexConsumer.java
@@ -2,10 +_,14 @@
 
 import java.nio.ByteBuffer;
 import java.nio.IntBuffer;
+
+import net.caffeinemc.mods.sodium.api.math.MatrixHelper;
 import net.minecraft.client.renderer.LightTexture;
 import net.minecraft.client.renderer.block.model.BakedQuad;
 import net.minecraft.core.Vec3i;
 import net.minecraft.util.ARGB;
+import org.joml.Math;
+import org.joml.Matrix3f;
 import org.joml.Matrix4f;
 import org.joml.Vector3f;
 import org.lwjgl.system.MemoryStack;
@@ -138,14 +_,30 @@
         return this.addVertex(pose.pose(), x, y, z);
     }
 
-    default VertexConsumer addVertex(Matrix4f pose, float x, float y, float z) {
-        Vector3f vector3f = pose.transformPosition(x, y, z, new Vector3f());
-        return this.addVertex(vector3f.x(), vector3f.y(), vector3f.z());
+    default VertexConsumer addVertex(Matrix4f matrix, float x, float y, float z) {
+        float xt = MatrixHelper.transformPositionX(matrix, x, y, z);
+        float yt = MatrixHelper.transformPositionY(matrix, x, y, z);
+        float zt = MatrixHelper.transformPositionZ(matrix, x, y, z);
+
+        return this.addVertex(xt, yt, zt);
     }
 
-    default VertexConsumer setNormal(PoseStack.Pose pose, float normalX, float normalY, float normalZ) {
-        Vector3f vector3f = pose.transformNormal(normalX, normalY, normalZ, new Vector3f());
-        return this.setNormal(vector3f.x(), vector3f.y(), vector3f.z());
+    default VertexConsumer setNormal(PoseStack.Pose pose, float x, float y, float z) {
+        Matrix3f matrix = pose.normal();
+
+        float xt = MatrixHelper.transformNormalX(matrix, x, y, z);
+        float yt = MatrixHelper.transformNormalY(matrix, x, y, z);
+        float zt = MatrixHelper.transformNormalZ(matrix, x, y, z);
+
+        if (!pose.trustedNormals) {
+            float scalar = org.joml.Math.invsqrt(org.joml.Math.fma(xt, xt, Math.fma(yt, yt, zt * zt)));
+
+            xt *= scalar;
+            yt *= scalar;
+            zt *= scalar;
+        }
+
+        return this.setNormal(xt, yt, zt);
     }
 
     default VertexConsumer setNormal(PoseStack.Pose pose, Vector3f normalVector) {
